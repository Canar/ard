#!/usr/bin/env bash
PREFIX=$( pwd )/prefix
SSLDIR=$PREFIX/lib/ssl
export ACLOCAL_PATH=$PREFIX/share/aclocal
export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig
MODE=shared
set -e

build-gen(){
	cd $1
	[ -z "$3" ] || "$3"
	./configure $2 --prefix=$PREFIX
	make install
	cd ..
}
dep-build-gen(){
	for dir in "$@" ; do
		build-$dir-$MODE
	done
}

build-ncurses-shared(){ build-gen ncurses "--with-shared --without-normal --without-debug --with-termlib --with-ticlib --disable-relink --with-widec --enable-pc-files" ; }
build-cppunit-shared(){ build-gen cppunit " " "./autogen.sh" ; }
build-curl-shared(){ build-gen curl "--disable-static --with-ssl=$SSLDIR --with-zlib" "./buildconf" ; }
#build-rtorrent-shared(){ build-gen rtorrent "--with-zlib=$PREFIX" "./autogen.sh" ; }
build-rtorrent-shared(){ 
	cd rtorrent
	export LDFLAGS="-L/hax/ard/prefix/lib -lncurses -ltinfo"
	export CFLAGS="-I/hax/ard/prefix/include/ncurses -I/hax/ard/prefix/include"
	export CPPFLAGS="$CFLAGS"
	./autogen.sh
	./configure --enable-ncurses --disable-static --prefix=$PREFIX
	make install
	cd ..
}
build-libtorrent-shared(){ build-gen libtorrent "--with-posix-fallocate --with-zlib=$PREFIX" "./autogen.sh" ; }
build-zlib-shared(){ build-gen zlib ; }
build-openssl-shared(){ 
	cd openssl
	export CFLAGS="-fPIC" 
	./Configure shared zlib-dynamic -fPIC --prefix=$PREFIX --openssldir=$SSLDIR --with-zlib-include=$PREFIX/include --with-zlib-lib=$PREFIX/lib linux-x86_64
	make install
	cd ..
}
dep-build-libtorrent-shared(){ dep-build-gen zlib openssl cppunit curl libtorrent ; }
dep-build-rtorrent-shared(){ 
	dep-build-libtorrent-shared
	dep-build-gen ncurses rtorrent
}
if [[ -n "$2" ]] ; then
	$2-build-$1-$MODE
elif [[ -n "$1" ]] ; then
	build-$1-$MODE
else
	dep-build-rtorrent-$MODE
fi
