#!/bin/bash
uaver=13.0
useragent="Mozilla/5.0 (Android; Mobile; rv:$uaver) Gecko/$uaver Firefox/$uaver" 	
sp=/usr/local/sh
dp=$sp/db
die(){
	case $1 in
		*) echo "Quitting with error code $1." ; exit $1 ;;
	esac
}
ws(){
	echo "$1.$2.$3"
}
enqueue(){
	if [ -e queue ]
	then
		eval 'echo "\"$1\" \"$2\" \"$3\""' >> queue
		echo "XNXX video #$5, AKA $4 has been queued for download."
	else
		import "$1" "$2" "$3"
	fi
}
import(){
	touch queue
	curl -L $1 > "$2"
	avconv -i "$2" -acodec copy -vcodec copy "$3"
	rm "$2"
	vlc --play-and-exit --one-instance --playlist-enqueue "$3" &
	nextimp
}
exp(){
	a=$1
	shift
	echo "\n\n$a: $*"
	exp $*

}
	
nextimp(){
	[ -e queue ] || exit 1
	i=$(head -1 queue)
	if [ "sex$i" = "sex" ]
	then
		rm queue
		exit 0
	fi
	mv queue queue_
	tail -n +2 queue_ >> queue
	rm queue_
	echo "$i" >> queue.old
	eval import "$i"
}
getmeta(){
	curl -L --raw "$1" > page 
	title=`grep -i "<title" page | cut -c 8- | cut -d- -f1 | sed 's-\s*$--g'`
	url=`grep flv_ page | sed 's/^.*flv_url=//g;s \"  g;s % \\\\\\\\x g;s &amp;.*$  g' | xargs -I {} printf "{}"`
	ext=`echo $url | cut -d\? -f1 | sed -e 's ^.*\.\([a-z]\+\)$ \1 g'`
	no=`echo $url | cut -d. -f4`
	fn="`ws "$title" $no $ext`"
	mfn="`ws $no "$title" mkv`"
	echo "$url" "$fn" "$mfn" "$title" "$no"
}
main(){
	enqueue "$url" "$fn" "$mfn" "$title" "$no"
}
write_meta_search(){
	local p=$dp/$1
	mkdir -p $p
	echo $2 > $p/atom
	echo $3 > $p/length_raw
	echo $4 > $p/rating
	echo $1/$2 > $p/page_url
	touch $p/no_video
}
get_meta_search_file(){
	cat $1 | grep -A 4 /video | sed 's,^.*http://www.xnxx.com/video\([0-9]\+\)/\([^"]\+\).*$,\1 \2,g' | sed 's/^.*>\([^<]\+\)<\/span.*$/"\1"/g' | sed 's/^.*(\([^)]\+\)) Rated : \([^<]\+\).*/\2 "\1" /g' | grep -v '^[ <]' | tr '\n' ' ' | sed 's/\s\+--\s\+/\n/g' | while read l ; do
		eval "write_meta_search ${l}"
	done
}
get_meta_search(){
	url=`sed 's/ /+/g' <<< "$1"`
	curl --raw "http://www.xnxx.com/?k=$url&p=$2" > $dp/gms
	get_meta_search_file $dp/gms
}
farm(){
	url=`sed 's/ /+/g' <<< "$1"`
	#cs="(='"'"'
	#ce=")>\"\' "
	#echo "-$cs-$ce-"
	curl --raw "http://www.xnxx.com/?k=$url&p=0" | grep -A 4 /video | sed 's,^.*http://www.xnxx.com/video\([0-9]\+\)/\([^"]\+\).*$,\1 \2,g' | sed 's/^.*>\([^<]\+\)<\/span.*$/"\1"/g' | sed 's/^.*(\([^)]\+\)) Rated : \([^<]\+\).*/\2 "\1" /g' | grep -v '^[ <]' | tr '\n' ' ' | sed 's/\s\+--\s\+/\n/g'
	#egrep -o '[^(=''"]+xnxx.com/[^>"\'' ]+' farm_page | tee farm_grep
}

new_db(){
	mkdir -p /usr/local/share/porn/xnxx/$1
}
tst(){
	cb='"'"'"
	cs="(=$cb"
	ce=")> $cb"
	#cs="(=$"
	#ce=")>\\''" "
	qu="[^$cs]+xnxx.com/video[^$ce]+"
	echo "-$cs-$ce-"
	egrep -o "$qu" farm_page | sed -e 's,.*/video\([0-9]\+\)/\(\S\+\),\1 "\2",g'

}
reapf(){
	l="`head -1 xnxx_db`"
	reap $l
}
reap(){
	curl "http://www.xnxx.com/video$1/$2" > page
	url=`grep flv_ page | sed 's/^.*flv_url=//g;s \"  g;s % \\\\\\\\x g;s &amp;.*$  g' | xargs -I {} printf "{}"`
}
a(){
	curl "$1" | grep -A 4 /video | sed 's,^.*http://www.xnxx.com/video\([0-9]\+\)/\([^"]\+\).*$,\1 \2,g' | sed 's/^.*>\([^<]\+\)<\/span.*$/"\1"/g' | sed 's/^.*(\([^)]\+\)) Rated : \([^<]\+\).*/\2 "\1" /g' | grep -v '^[ <]' | tr '\n' ' ' | sed 's/\s\+--\s\+/\n/g'
}
get_meta_page_random(){
	no=`find $path | sort -R | grep no_video | sed 's,^.*/\([^/]\+\)/no_video$,\1,g' | head -1`
	get_meta_page_no $no
}
get_meta_page_all(){
	v=` find $path | sort -R | grep no_video | sed 's,^.*/\([^/]\+\)/no_video$,\1,g' | head -1`
       if [[ $v = "" ]] ; then
		echo "No videos left. Run ./xnxx s 'search terms' to get more urls to leech."
       else
		get_meta_page_no $v 
	fi
}
get_meta_page_no(){
	if [ -f $dp/$1/bad ] ; then
		rm $dp/$1/no_video
		return
	fi
	at=`cat $dp/$1/atom | sed 's THUMBNUM/ 0/ g'`
	curl "http://www.xnxx.com/video$1/$at" > $dp/gmpn
	get_meta_page_file $1 $dp/gmpn
}
get_meta_page_file(){
	[ -f $dp/$1/no_video ] || return 
	[ -f $dp/$1/bad ] && return
	cat $2 | tr -d '\n' | sed 's/<!--[^>]*-->/\n\n/g' | grep Length | sed 's/\s*<[^>]\+>\s*/\n/g' | tr '\n' ' ' | tr '-' '\n' | sed 's/^\s*\(\S.*\S\)\s*$/\1/g' | grep -i Tags | cut -d: -f2- | sed 's,^\s*,,g;s/\s\+/,/g' | tr -d '\n' | tee $dp/$1/tags
	grep flashvars $2 | sed 's/^.*flashvars="\([^"]\+\)".*/\1/g' | sed 's/&amp;/\n/g' | echo -e "`sed 's/%/\\\\x/g'`" | tr '|;' '\n' > $dp/$1/flashvars
	u=`cat $dp/$1/flashvars | grep flv_url | cut -d= -f2- | sed 's THUMBNUM/  g'`
	if [ "x$u" = "x" ] ; then
		touch $dp/$1/bad
	else
		mv $dp/$1/no_video $dp/$1/getting_video
		curl "$u" > $dp/$1/video.flv && rm $dp/$1/getting_video
	fi
}
set -ex
case "sex$1" in
#sex)	nextimp;;
#sexx)	extract;;
#sexq)	enqueue `getmeta $2` ;; #should be enqueue
#sexm)	getmeta $2 ;;
#sexf)	farm "$2" ;;
#sexd)	reapf ;;
#sext)	tst $2 ;;
#sexa)	a $2 ;;
sexs)	get_meta_search "$2" ;;
sexsf)	get_meta_search_file "$2" ;; 
sexpr)	get_meta_page_random ;;
sexpa)	get_meta_page_all ;;
sexpf)	get_meta_page_file $dp/gmpn  ;;
*) 	echo "$@";;
esac
