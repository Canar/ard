#!/usr/bin/env bash
deansi(){
	sed -r "s/\x1B\[.{1,9}m//g"
}
link(){
	irclog |& sort -r |cut -f3 |sed -r 's/^.*http/http/g'
}
irclog(){
	ssh user@bed.ac grep -iE "$2.*https?://" .weechat/logs/*"$1"* 
}
login(){
	ssh -t user@$1 screen -drU
}
echo-firefox-useragent(){
	echo "Mozilla/5.0 (Windows NT 5.1; rv:31.0) Gecko/20100101 Firefox/31.0"
}
browse(){
	lynx -cookies "$@"
}
browse-cloaked(){
	browse "-useragent='$(echo-firefox-useragent)'" "$@"
}
google-search-url(){
	url=$(echo "$@" |tr ' ' '+')
	echo "https://www.google.ca/search?q=$url"
}
google(){
	browse $(google-search-url "$@")
}
google-cloaked(){
	browse-cloaked $(google-search-url "$@")
}
google-raw(){
	curl -A "$(echo-firefox-useragent)" $(google-search-url "$@")
}
google-links(){
	google-raw "$@" 2>/dev/null |hxwls 2>/dev/null |egrep '^(http|#)' |sed '/google/d ; /blogger/d  ; /youtube/d ; /chillingeffect/d'
}
deai(){
	mount -o remount,rw,bind /sys/fs/selinux
}
ai(){
	mount -o remount,ro,bind /sys/fs/selinux
}
make-dvd-iso(){
	ffmpeg -ss 39:06 -i ../VTS_01_1.VOB  -t 0:46 -y -target dvd -vcodec copy -acodec copy out.vob 
	dvdauthor -t -o wat2 -f out.vob 
	VIDEO_FORMAT=NTSC dvdauthor -o wat2/ -T 
	genisoimage -dvd-video -o dvd.iso wat2/
}
sandra-encode(){
	ffmpeg -i $1 -c:v libx264 -crf 30 -vf hqdn3d,yadif,crop=704:480:10:0,lutyuv="y=gammaval(1.3)" -c:a copy -y $2
}
get-loudness(){
	val=$( ffmpeg -nostats -i "$1" -filter_complex ebur128 -f null - |& grep "   I:   " | cut -b 7-20 | tr -d ' ' )
	echo "-12 - $val" | bc
}
decode-wave(){
	ffmpeg -loglevel warning -hide_banner -i "$1" -ac 2 -ar 44100 -sample_fmt s16 -af "compand=.3:1:-6/-6|0/-3:6:$( get-loudness "$1" ):-96:0.3,silenceremove=1:0:-72dB" "$2"
}
video-pi(){
	punt popd
	pwd
	omxplayer "$@"
}
video-verbose-pi(){
	echo "$@"
	video-pi "$@"
}
zzargs(){
	xargs -a $1 -0 -I {} "${@:2}"
}
curleach(){ #automates xargs 
	tr '\n' '\0' >${tmp}_c
	zzargs ${tmp}_c "$@"
}
shufleach(){
	sort -R |curleach "$@"
}
ishufleach(){
	f="$1"
	shift
	cat $f| sort -R |curleach "$@"
}
nullist(){
	tr '\n' '\0'
}
netmount(){
	sshfs user@imladris:/mnt/jenna/Unsorted /jenna
	sshfs user@imladris:/mnt/movies/Movies /movies
}
setblank(){
	setterm -blank 0
}
lvmount(){
	ls /dev/lvm/ |xargs -I {} mount /dev/lvm/{} /lv/{}
}
drannmount(){
	sshfs root@192.168.0.2:/data/media/0 /mnt/drann
}
dranntune(){
	d=$1 ; shift
	echo caudec -c mpc /mnt/drann/media/albums/$d "$@"
}


mount-ssh-user(){
	sshfs -o allow_other,direct_io,uid=1000,gid=1000,cache=no,workaround=rename "$@"
}
mount-ssh-lv(){ mount-ssh-user root@gondolin:/lv /lv ; }

set-permissions-android-net-user(){
	groupadd -g 3001 android_bt
	groupadd -g 3002 android_bt-net
	groupadd -g 3003 android_inet
	groupadd -g 3004 android_net-raw
	chmod a+r /etc/resolv.conf
	usermod -a -G android_bt,android_bt-net,android_inet,android_net-raw user
}
wlan-mac(){
	ls -1 /sys/class/net/wlan*/address >${tmp}f
	cat ${tmp}f | xargs -n1 cat >${tmp}fm
	cat ${tmp}f | cut -d/ -f5 >${tmp}fi
	paste ${tmp}fm ${tmp}fi
}
wifi(){
	killall wpa_supplicant
	sleep 1
	wlan-mac >${tmp}.mac
	cp ${tmp}.mac ${tmp}.mac2
	[[ -n "$mac" ]] && grep $mac ${tmp}.mac2 >${tmp}.mac
	if=$(cut -f2 ${tmp}.mac)
	rm ${tmp}*
	wpa_supplicant -Dwext -i$if -c $wpaconf & dhclient $if
}
folder-ren-num(){
	tmp=/tmp
	ls -1 > ${tmp}/f
	sed -r 's/^.*$/'\''&'\''/g' ${tmp}/f > ${tmp}/fq
	seq -w 1 $(cat ${tmp}/f | wc -l) | paste -d- - ${tmp}/f | sed -r 's/^.*$/'\'$( basename $PWD )'-&'\''/g' > ${tmp}/fn
	paste -d' ' ${tmp}/fq ${tmp}/fn |sed -r 's/^/mv /' >${tmp}/g 
	bash -x ${tmp}/g
}

mount-guaranteed(){
	if [[ ! -d $1 ]] ; then
		echo "ERROR: $1 is not a directory."
	elif [[ $1 = "/" ]] ; then 
		echo "ERROR: $1 cannot be root."
	elif ! grep -q $2 $1 $3 &> /dev/null ; then 
		if ! mount -t $3 $2 $1 ; then
			echo "ERROR: mount -t $3 $2 $1 failed."
		fi
	fi
}
mount-sys-guaranteed(){
	mount-guaranteed $1 $2 $2
}
enter-chroot(){ # enter-chroot /chroot/path
	mount-sys-guaranteed $1/dev devtmpfs
	mount-sys-guaranteed $1/dev/pts devpts
	mount-sys-guaranteed $1/proc proc
	mount-sys-guaranteed $1/sys sysfs
	chroot $1 /usr/bin/env -i - /bin/bash --login
	umount $1/{dev/pts,dev,proc,sys}
}
max-compress(){
	lrzip -U -p1 -vv -z -L9 $1
}
print-ip(){
	curl http://ipv4.myip.dk/api/info/IPv4Address 2>/dev/null | tr -d '"' 
	echo ""
}
image-partition(){ #
	i=/imladris/$1
	d=/dev/$i
	tf=/tmp/image-partition
	umount $d
	e2fsck -fy $d
	resize2fs -M $d | tee $tf-size
	grep "The filesystem on .* blocks long." $tf-size |\
		sed 's/^.* \([0-9]\+\) (\([0-9]\+\)k) blocks.*$/\1	\2/g' >$tf-params
	s=$( cut -f1 $tf-params )
	b=$( cut -f2 $tf-params )
	dd if=$d count=$s bs=$(( $b * 1024 )) | pv --size $(( $s * $b ))k >"$2"
	resize2fs $d
}
login-as-disabled(){
	su --shell /bin/bash --login "$@"
}
clean-upnp-mappings(){
	upnpc -l |\
		grep '^[ 0-9][0-9]' |\
		sed 's/^ \?[0-9]\+ \(...\) \(.....\).*$/upnpc -d \2 \1/g' |\
		bash >/dev/null
}
set-screen-title(){
	echo -e '\033]2;'"$@"'\007'
}
image-new-lv(){
	lvcreate -L $2 -n $1 imladris
	pv $3 >/dev/lvm/$1
	e2fsck -f /dev/lvm/$1
	resize2fs /dev/lvm/$1
}
gen-container(){ #name, size, image, [pv]
	if [[ -z $4 ]] ; then
		pv=/dev/sda2
	else
		pv=$4
	fi
	image-new-lv $1 $2 $3 
	mkdir -p /lv/$1
	mount /dev/lvm/$1 /lv/$1
	systemd-nspawn -bD /lv/$1
}

pvmap(){
	map=$( \
		pvdisplay -m /dev/$1 |\
		tr '\n' $'\t' |\
		sed "s/Physical/\nPhysical/g" |\
		grep 'extent' 
	)
	blk=$( grep -v FREE <<< "$map" )
	bnum=$( seq 1 $( wc -l <<< "$blk" ) )
	ee=$( tail -1 <<< "$map" | sed 's/^.* to \([0-9]\+\):.*$/\1/g' ) 

	echo -e "Block\tStart\tEnd\tL.St.\tL.End\tLength\tDevice" 
	paste <(echo "$blk") <(echo "$bnum") | sed 's|Physical extent \([0-9]\+\) to \([0-9]\+\):[^/]\+\(/[^ \t]\+\)[^0-9]\+\([0-9]\+\) to \([0-9]\+\)[ \t]\+\([0-9]\+\)|\1 \2 \4 \5 \3 \6|g' | (
		ope=0 
		while read ps pe ls le d b 
		do 
			if [ $(( $ope + 1 )) -lt $ps ] ; then 
				echo -e "\t$(( $ope + 1 ))\t$(( $ps - 1 ))\tFREE\t\t$(( $ps - $ope - 1 ))"
			fi
			echo -e "$b\t$ps\t$pe\t$ls\t$le\t$(($pe-$ps+1))\t$d"
			ope=$pe
			echo $ope > ope 
		done 
		export ope=$( cat ope ) 
		[ $(( $ope + 1 )) -lt $ee ] && echo -e "\t$(( $ope + 1 ))\t$ee\tFREE\t\t$(( $ee - $ope ))" 
	)
}
map-pv(){

	pvdisplay -m /dev/$1 | tr '\n' $'\t' | sed "s/Physical/\nPhysical/g" | grep 'extent' > map
	grep -v FREE map >blk
	seq 1 `wc -l <blk` >blkn

	ee=$( cat map | tail -1 | sed 's/^.* to \([0-9]\+\):.*$/\1/g' ) 
	echo -e "Block\tStart\tEnd\tL.St.\tL.End\tLength\tDevice" 
	paste blk blkn | sed 's|Physical extent \([0-9]\+\) to \([0-9]\+\):[^/]\+\(/[^ \t]\+\)[^0-9]\+\([0-9]\+\) to \([0-9]\+\)[ \t]\+\([0-9]\+\)|\1 \2 \4 \5 \3 \6|g' | (
		ope=0 
		while read ps pe ls le d b 
		do 
			if [ $(( $ope + 1 )) -lt $ps ] ; then 
				echo -e "\t$(( $ope + 1 ))\t$(( $ps - 1 ))\tFREE\t\t$(( $ps - $ope - 1 ))"
			fi
			echo -e "$b\t$ps\t$pe\t$ls\t$le\t$(($pe-$ps+1))\t$d"
			ope=$pe
			echo $ope > ope 
		done 
		export ope=$( cat ope ) 
		echo -e "\t$(( $ope + 1 ))\t$ee\tFREE\t\t$(( $ee - $ope ))" 
	)
}
append-pv-blk(){
	D=/dev/$1
	W=$2
	I=$3
	O=$4
	C="pvmove --alloc anywhere $D:$I-$(($I+$W-1)) $D:$O-$(($O+W-1))"
	echo "$C"
}
crc-catalog(){
	find -type f -printf '%s\t' -exec rhash --printf '%m\t%h\t%c\t%p\n' {} \; |tee $1
}
mntlv(){
	mkdir -p /imladris/$1 &> /dev/null
	mount /dev/imladris/$1 /imladris/$1
}
wstrap(){
	[ -n $1 ] || exit 1
	mirror=$(grep -v ^# /etc/apt/sources.list | grep main | head -1 | awk '{print $2}')
	mkdir -p "$1/var/cache/bootstrap"
	cp -lr /var/cache/deb/* "$1/var/cache/bootstrap"
	# $2 can be minimal, standard, build
	cdebootstrap -f ${2:-standard} sid "$1" "$mirror"
}
line-to-param(){ #quotes a whole line to make it suitable as a parameter
	sed "s/'/'"'\\'"''/g ; s/^/'/ ; s/$/'/"
}
buildroot-prep-debian(){
	aptitude install git mercurial bc cpio unzip wget 
}
